//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/00_sakane/InputSystem/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""88d79cc7-ca8d-4c27-b720-c0384aab0f80"",
            ""actions"": [
                {
                    ""name"": ""LineCreating"",
                    ""type"": ""Value"",
                    ""id"": ""cc24eaef-761a-4cee-987d-d4013190b146"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LineDelete"",
                    ""type"": ""Value"",
                    ""id"": ""a560cae0-9ecf-456d-8451-300ff448c3b4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ColorChange"",
                    ""type"": ""PassThrough"",
                    ""id"": ""19709191-a102-4ae6-b46d-591d2d8c5f52"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LineCreate"",
                    ""type"": ""Button"",
                    ""id"": ""760505ee-7c27-4d66-87ea-ebdd8fa4b62c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Create"",
                    ""id"": ""8bdec43c-a770-4451-9701-6244cc5eb091"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineCreating"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Modifier"",
                    ""id"": ""cb9a6ca2-ca7c-4373-a431-8f9070e04f5a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineCreating"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Binding"",
                    ""id"": ""d1827cab-114b-49c9-bcaf-59f27f4f2edd"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineCreating"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Delete"",
                    ""id"": ""cafaf95d-6389-4a92-8ea3-73dd69727d72"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineDelete"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Modifier"",
                    ""id"": ""3a7e9bd9-75ef-49c5-8901-b8804edea8d0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineDelete"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Binding"",
                    ""id"": ""06393e08-b1aa-400e-9ab1-f764e0221643"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineDelete"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""44c0a50d-f29a-4496-8d5a-d81136b13b4b"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ColorChange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b157ca6-6d4d-40ca-a022-e8e83e3ed750"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineCreate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_LineCreating = m_Player.FindAction("LineCreating", throwIfNotFound: true);
        m_Player_LineDelete = m_Player.FindAction("LineDelete", throwIfNotFound: true);
        m_Player_ColorChange = m_Player.FindAction("ColorChange", throwIfNotFound: true);
        m_Player_LineCreate = m_Player.FindAction("LineCreate", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_LineCreating;
    private readonly InputAction m_Player_LineDelete;
    private readonly InputAction m_Player_ColorChange;
    private readonly InputAction m_Player_LineCreate;
    public struct PlayerActions
    {
        private @GameInput m_Wrapper;
        public PlayerActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @LineCreating => m_Wrapper.m_Player_LineCreating;
        public InputAction @LineDelete => m_Wrapper.m_Player_LineDelete;
        public InputAction @ColorChange => m_Wrapper.m_Player_ColorChange;
        public InputAction @LineCreate => m_Wrapper.m_Player_LineCreate;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @LineCreating.started += instance.OnLineCreating;
            @LineCreating.performed += instance.OnLineCreating;
            @LineCreating.canceled += instance.OnLineCreating;
            @LineDelete.started += instance.OnLineDelete;
            @LineDelete.performed += instance.OnLineDelete;
            @LineDelete.canceled += instance.OnLineDelete;
            @ColorChange.started += instance.OnColorChange;
            @ColorChange.performed += instance.OnColorChange;
            @ColorChange.canceled += instance.OnColorChange;
            @LineCreate.started += instance.OnLineCreate;
            @LineCreate.performed += instance.OnLineCreate;
            @LineCreate.canceled += instance.OnLineCreate;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @LineCreating.started -= instance.OnLineCreating;
            @LineCreating.performed -= instance.OnLineCreating;
            @LineCreating.canceled -= instance.OnLineCreating;
            @LineDelete.started -= instance.OnLineDelete;
            @LineDelete.performed -= instance.OnLineDelete;
            @LineDelete.canceled -= instance.OnLineDelete;
            @ColorChange.started -= instance.OnColorChange;
            @ColorChange.performed -= instance.OnColorChange;
            @ColorChange.canceled -= instance.OnColorChange;
            @LineCreate.started -= instance.OnLineCreate;
            @LineCreate.performed -= instance.OnLineCreate;
            @LineCreate.canceled -= instance.OnLineCreate;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnLineCreating(InputAction.CallbackContext context);
        void OnLineDelete(InputAction.CallbackContext context);
        void OnColorChange(InputAction.CallbackContext context);
        void OnLineCreate(InputAction.CallbackContext context);
    }
}
